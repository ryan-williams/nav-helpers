#!/usr/bin/env bash

# Navigation aliases
alias cdp="cd $PWD"

parent() {
  echo "$(cd .. && echo $PWD)"
}
export -f parent

# cd .. with autocomplete
# Need to unalias u if it exists, as aliases take precedence over functions
if alias u &>/dev/null; then
    unalias u
fi

u() {
    if [ $# -eq 0 ]; then
        cd ..
    else
        cd "../$1"
    fi
}

# Autocomplete for u - shows directories in parent directory
_u_complete() {
    local cur="${COMP_WORDS[COMP_CWORD]}"
    local parent_dir=".."

    # Get directories in parent directory
    local dirs=$(cd "$parent_dir" 2>/dev/null && compgen -d -- "$cur")

    COMPREPLY=( $dirs )
}

complete -F _u_complete u

alias uu="cd ../.."
alias uuu="cd ../../.."
alias uuuu="cd ../../../.."

alias psh="pushd"
alias pop="popd"
alias P="pushd"
alias b="popd"

defn mcd multi-cd

defn md mkdir -p
defn mkd mkdir -p
defn mdp mkdir -p
defn mdn mkdir-dirname

mvp() {
  last=${@: -1}
  mkdir -p "$(dirname "$(realpath -sm $last)")"
  mv "$@"
}
export -f mvp

defn mpd mkdir-p-dirname

multi_cd() {
	if [ $# -ne 1 ]; then
		echo "Usage: ${FUNCNAME[0]} <dir>" >&2
		return 1
	fi
	if [ -d "$1" ]; then
	    cd "$1"
	else
	    files=$(ls -Ad "*$1*")
	    if [ "$(count $files)" == "1" ]; then
	        cd $files
	    else
	        echo 'select:'
	        select filename in $files; do
	            cd $filename
	            break
	        done
	    fi
	fi
}
export -f multi_cd

mkdir_p_cd() {
	if [ $# -ne 1 ]; then
		echo "Usage: ${FUNCNAME[0]} <dir>" >&2
		return 1
	fi
	dir="$1"
	mkdir -p "$dir" && cd "$dir"
}
export -f mkdir_p_cd

defn cdm mkdir_p_cd
defn mdc mkdir_p_cd

cdn() {
  cd "$(dn "$@")"
}

alias cdr=cd-run
